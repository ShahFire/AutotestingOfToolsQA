package tests;

import com.codeborne.selenide.Configuration;
import interfaces.PageAdInterface;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.BeforeEach;

import static com.codeborne.selenide.Selenide.open;

/**
 * В ходе разработке дынных автотестов был реализован паттерн проектирования PageObject
 * Каким же образом строилась логика при создании автотеста?
 * 1.	Первым делом я создал папку для хранения страничек и их элементов, а также действий над ними.
 * В этой папке я создал Java классы для страничек, с которыми я взаимодействую
 * Внутри каждого класса я объявил нужные мне Selenide элементы, расположенные на страничке,
 * а также создал методы, проводящие действия над объявленными Selenide элементами.
 * 2.   В ходе разработки мне понадобилось добавить взаимодействие с левой панелью элементов,
 * Предназначенной для перехода между страничками.
 * Так-как она не является отдельной страничкой, а является общим, для многих страниц элементом,
 * я решил вынести её в отдельную папку и создать для неё Java класс.
 * 3.   После чего была создана папка, содержащая в себе шаги (steps) Java тестов.
 * Внутри каждого Java класса были прописаны шаги, а также их подробное описание.
 * 4.   Следующим этапом стало создание Java класса «tests.BaseTest», содержащего в себе параметры
 * браузера, ссылку на тестируемую страницу, а также реализацию тестов (перечисление шагов)
 * 5.   По завершению работы над тестами всё было протестировано с помощью плагина «Allure».
 * 6.   В конце я залил проект на Github, добавил некоторые комментарии, а также написал этот текст.
 */

public class BaseTest implements PageAdInterface {
   private String urlSite = "https://demoqa.com";

    @BeforeEach
    protected void Start() {
        WebDriverManager.chromedriver().setup();
        Configuration.browser = "chrome";
        Configuration.browserSize = "820x1280";
        open(urlSite);
    }
}